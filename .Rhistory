nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 25
losspoint = 25
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 20
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 20
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 25
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 30
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 10
losspoint = 30
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
basic_analysis = function(records)
{
profit = ifelse(records$type == 'long',(records$close - records$open),(records$open - records$close))
records$profit = profit
win_ratio = length(profit[profit>0])/length(profit)
years = substring(records$opentime,1,4)
anual_profit = aggregate(records$profit,by=list(years),sum)
colnames(anual_profit) = c('year','profit')
anual_len = aggregate(records$profit,by=list(years),length)
colnames(anual_len) = c('year','len')
anual_ratio = aggregate(records$profit,by=list(years),function(x){length(x[x>0])/length(x)})
colnames(anual_ratio) = c('year','ratio')
anual_record = merge(anual_profit,anual_len)
anual_record = merge(anual_record,anual_ratio)
#aggregate(records$profit,by=list(years),length)
anual_record$trueprofit = anual_record$profit - anual_record$len*0.8 - anual_record$len
anual_record$virtualprofit = anual_record$profit - anual_record$len*0.8 - anual_record$len
print(sum(profit))
print(nrow(records))
print(win_ratio)
print(anual_record)
print(sum(anual_record$trueprofit))
}
basic_analysis(records)
data$atr = ATR(data,10)$atr
data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
basic_analysis = function(records)
{
profit = ifelse(records$type == 'long',(records$close - records$open),(records$open - records$close))
records$profit = profit
win_ratio = length(profit[profit>0])/length(profit)
years = substring(records$opentime,1,4)
anual_profit = aggregate(records$profit,by=list(years),sum)
colnames(anual_profit) = c('year','profit')
anual_len = aggregate(records$profit,by=list(years),length)
colnames(anual_len) = c('year','len')
anual_ratio = aggregate(records$profit,by=list(years),function(x){length(x[x>0])/length(x)})
colnames(anual_ratio) = c('year','ratio')
anual_record = merge(anual_profit,anual_len)
anual_record = merge(anual_record,anual_ratio)
#aggregate(records$profit,by=list(years),length)
anual_record$trueprofit = anual_record$profit - anual_record$len*0.8 - anual_record$len
anual_record$virtualprofit = anual_record$profit - anual_record$len*0.8
print(sum(profit))
print(nrow(records))
print(win_ratio)
print(anual_record)
print(sum(anual_record$trueprofit))
}
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
find_top = function(ds)
{
return(max(as.numeric(ds$High)))
}
find_bottom = function(ds)
{
return(min(as.numeric(ds$Low)))
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 20
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
3807-15
vis_bar(data['2008'])
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
data$atr = ATR(data,10)$atr
data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
NbarState = R6Class('nbarstate',
public=list(
judge = Judge$new(),
upcount = 0,
downcount = 0,
update = function(d){
if(self$judge$is_up(d))
{
self$upcount = self$upcount+1
self$downcount = 0
}
else if(self$judge$is_down(d))
{
self$upcount = 0
self$downcount = self$downcount+1
}
else if(self$judge$is_cross(d))
{
self$upcount = 0
self$downcount = 0
}
}
))
nbar_strategy = function(d,position,nbarstate,losspoint=10,winpoint=10,n=3,pred)
{
time = as.character(index(d))
open = as.numeric(d$Open)
sma = as.numeric(d$sma)
curpostion = position
high = as.numeric(d$High)
low = as.numeric(d$Low)
prehigh = max(as.numeric(pred$High))
prelow = min(as.numeric(pred$Low))
if(nbarstate$upcount == n && high > prehigh)
{
#openbuy()
op = ifelse(open > prehigh,open,prehigh)
stoploss = prelow# op - losspoint
stopwin = op + winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss)
curpostion$add(trade)
}
if(nbarstate$downcount == n && low < prelow )
{
#opensell()
op = ifelse(open < prelow,open,prelow)
stoploss = prehigh#op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss)
curpostion$add(trade)
}
return(curpostion)
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
source('src/config/include.R',encoding='utf-8')
sourceDir('src/dw/interface',encoding='utf-8')
source('src/dw/collectdata/collectfromwind.R',encoding='utf-8')
sourceDir('src/algorithm',encoding='utf-8')
source('src/strategy/shock/nbarclass.R',encoding='utf-8')
nbarframework = function()
{
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
data$atr = ATR(data,10)$atr
data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
}
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
data$atr = ATR(data,10)$atr
data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
atr = floor(as.numeric(d$atr))
# winpoint = atr
# losspoint = atr
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate,iswinfirst=T)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
}
records = position$records
basic_analysis(records)
vis_bar(data['2006'])
freq = 5
orgin_data = getdata(dbname,tbname,freq)
vis_bar(data['2006'])
vis_bar(data['2014'])
(3888+3871)/2
3786+3792
7578/2
vis_bar(data['2006'])
vis_bar(data['2007'])
3850-3827
3850+3827
7677/2
(3844+3836)/2
3829
(3830+3815)/2
3829-3812
3817
(3819+3812)/2
3804-3815
3804-3813
