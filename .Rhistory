contract_data = contract_data[day]
if(!exists('main_price'))
{
main_price = contract_data
}
else
{
main_price = rbind(main_price,contract_data)
}
}
main_price = as.data.frame(main_price)
main_price$datetime = rownames(main_price)
writeToMysqltable(main_price,db,tbname,overwrite = T)
writeToMysqltable(main_info,infodb,tbnameinfo,overwrite = T)
rm('main_price')
}
tbnameinfo = 'dlc'
source('src/config/include.R',encoding='utf-8')
dbinfo = 'china_future_info'
db = 'china_future_ods_day'
tbname = 'dlcmi'
tbnameinfo = 'dlc'
tbs = c('dlc01','dlc03','dlc05','dlc07','dlc09','dlc11')
create_main_contract = function(tbs,infodb,db,tbnameinfo,tbname)
{
#获取单个合约信息
for(tb in tbs)
{
data = getTableData(db,tb)
data = xts(data[,c('Open','High','Low','Close','Vol','Oi')],order.by=as.Date(data$datetime))
assign(tb,data)
}
#获取所有的日期
alldays = sapply(tbs,function(x){m=get(x);return(index(m))})
alldays = as.character(unique(alldays[[1]]))
contracts_info = c()
#main_price = xts()
#拼接主力合约每天所用的具体合约
for(day in alldays)
{
#获取每天每个合约的持仓量
dayinfo = lapply(tbs,function(x,day){m=get(x)
info = m[day]
oi = ifelse(nrow(info)==0,0,info$Oi)
return(c(x,oi))},day)
#按持仓量进行排序
dayinfo = dayinfo[order(sapply(dayinfo,function(x){as.numeric(x[2])}),decreasing = T)]
day_contract = dayinfo[[1]][1]
contract_data = get(day_contract)
contract_data = contract_data[day]
contracts_info = c(contracts_info,day_contract)
}
contracts_info = lag(contracts_info)
contracts_info[1] = contracts_info[2]
main_info =data.frame(date = alldays,contract = contracts_info)
for(i in 1:nrow(main_info))
{
dayinfo = main_info[i,]
day = dayinfo$date
day_contract = as.character(dayinfo$contract)
contract_data = get(day_contract)
contract_data = contract_data[day]
if(!exists('main_price'))
{
main_price = contract_data
}
else
{
main_price = rbind(main_price,contract_data)
}
}
main_price = as.data.frame(main_price)
main_price$datetime = rownames(main_price)
writeToMysqltable(main_price,db,tbname,overwrite = T)
writeToMysqltable(main_info,infodb,tbnameinfo,overwrite = T)
rm('main_price')
}
create_main_contract(tbs,dbinfo,db,tbnameinfo,tbname)
tbname = 'dlami'
source('src/config/include.R',encoding='utf-8')
dbinfo = 'china_future_info'
db = 'china_future_ods_day'
#tbname = 'dlcmi'
tbname = 'dlami'
#tbnameinfo = 'dlc'
tbnameinfo = 'dla'
#tbs = c('dlc01','dlc03','dlc05','dlc07','dlc09','dlc11')
tbs = c('dlax01','dlax03','dlax05','dlax07','dlax09','dlax11',
'dlay01','dlay03','dlay05','dlay07','dlay09','dlay11')
create_main_contract = function(tbs,infodb,db,tbnameinfo,tbname)
{
#获取单个合约信息
for(tb in tbs)
{
data = getTableData(db,tb)
data = xts(data[,c('Open','High','Low','Close','Vol','Oi')],order.by=as.Date(data$datetime))
assign(tb,data)
}
#获取所有的日期
alldays = sapply(tbs,function(x){m=get(x);return(index(m))})
alldays = as.character(unique(alldays[[1]]))
contracts_info = c()
#main_price = xts()
#拼接主力合约每天所用的具体合约
for(day in alldays)
{
#获取每天每个合约的持仓量
dayinfo = lapply(tbs,function(x,day){m=get(x)
info = m[day]
oi = ifelse(nrow(info)==0,0,info$Oi)
return(c(x,oi))},day)
#按持仓量进行排序
dayinfo = dayinfo[order(sapply(dayinfo,function(x){as.numeric(x[2])}),decreasing = T)]
day_contract = dayinfo[[1]][1]
contract_data = get(day_contract)
contract_data = contract_data[day]
contracts_info = c(contracts_info,day_contract)
}
contracts_info = lag(contracts_info)
contracts_info[1] = contracts_info[2]
main_info =data.frame(date = alldays,contract = contracts_info)
for(i in 1:nrow(main_info))
{
dayinfo = main_info[i,]
day = dayinfo$date
day_contract = as.character(dayinfo$contract)
contract_data = get(day_contract)
contract_data = contract_data[day]
if(!exists('main_price'))
{
main_price = contract_data
}
else
{
main_price = rbind(main_price,contract_data)
}
}
main_price = as.data.frame(main_price)
main_price$datetime = rownames(main_price)
writeToMysqltable(main_price,db,tbname,overwrite = T)
writeToMysqltable(main_info,infodb,tbnameinfo,overwrite = T)
rm('main_price')
}
create_main_contract(tbs,dbinfo,db,tbnameinfo,tbname)
dbinfo = 'china_future_info'
db = 'china_future_ods_day'
#tbname = 'dlcmi'
tbname = 'dlami'
#tbnameinfo = 'dlc'
tbnameinfo = 'dla'
#tbs = c('dlc01','dlc03','dlc05','dlc07','dlc09','dlc11')
tbs = c('dlax01','dlax03','dlax05','dlax07','dlax09','dlax11',
'dlay01','dlay03','dlay05','dlay07','dlay09','dlay11')
for(tb in tbs)
{
data = getTableData(db,tb)
data = xts(data[,c('Open','High','Low','Close','Vol','Oi')],order.by=as.Date(data$datetime))
assign(tb,data)
}
dlax01
alldays = sapply(tbs,function(x){m=get(x);return(index(m))})
alldays = as.character(unique(alldays[[1]]))
contracts_info = c()
alldays
for(day in alldays)
{
#获取每天每个合约的持仓量
dayinfo = lapply(tbs,function(x,day){m=get(x)
info = m[day]
oi = ifelse(nrow(info)==0,0,info$Oi)
return(c(x,oi))},day)
#按持仓量进行排序
dayinfo = dayinfo[order(sapply(dayinfo,function(x){as.numeric(x[2])}),decreasing = T)]
day_contract = dayinfo[[1]][1]
contract_data = get(day_contract)
contract_data = contract_data[day]
contracts_info = c(contracts_info,day_contract)
}
contracts_info = lag(contracts_info)
contracts_info[1] = contracts_info[2]
main_info =data.frame(date = alldays,contract = contracts_info)
main_info
for(i in 1:nrow(main_info))
{
dayinfo = main_info[i,]
day = dayinfo$date
day_contract = as.character(dayinfo$contract)
contract_data = get(day_contract)
contract_data = contract_data[day]
if(!exists('main_price'))
{
main_price = contract_data
}
else
{
main_price = rbind(main_price,contract_data)
}
}
i
dayinfo = main_info[i,]
dayinfo
day = dayinfo$date
day_contract = as.character(dayinfo$contract)
contract_data = get(day_contract)
contract_data = contract_data[day]
contract_data
day
contract_data['2015-12-15']
contract_data = contract_data[day]
day = as.charactor(dayinfo$date)
day = as.character(dayinfo$date)
contract_data = contract_data[day]
source('src/config/include.R',encoding='utf-8')
dbinfo = 'china_future_info'
db = 'china_future_ods_day'
#tbname = 'dlcmi'
tbname = 'dlami'
#tbnameinfo = 'dlc'
tbnameinfo = 'dla'
#tbs = c('dlc01','dlc03','dlc05','dlc07','dlc09','dlc11')
tbs = c('dlax01','dlax03','dlax05','dlax07','dlax09','dlax11',
'dlay01','dlay03','dlay05','dlay07','dlay09','dlay11')
create_main_contract = function(tbs,infodb,db,tbnameinfo,tbname)
{
#获取单个合约信息
for(tb in tbs)
{
data = getTableData(db,tb)
data = xts(data[,c('Open','High','Low','Close','Vol','Oi')],order.by=as.Date(data$datetime))
assign(tb,data)
}
#获取所有的日期
alldays = sapply(tbs,function(x){m=get(x);return(index(m))})
alldays = as.character(unique(alldays[[1]]))
contracts_info = c()
#main_price = xts()
#拼接主力合约每天所用的具体合约
for(day in alldays)
{
#获取每天每个合约的持仓量
dayinfo = lapply(tbs,function(x,day){m=get(x)
info = m[day]
oi = ifelse(nrow(info)==0,0,info$Oi)
return(c(x,oi))},day)
#按持仓量进行排序
dayinfo = dayinfo[order(sapply(dayinfo,function(x){as.numeric(x[2])}),decreasing = T)]
day_contract = dayinfo[[1]][1]
contract_data = get(day_contract)
contract_data = contract_data[day]
contracts_info = c(contracts_info,day_contract)
}
contracts_info = lag(contracts_info)
contracts_info[1] = contracts_info[2]
main_info =data.frame(date = alldays,contract = contracts_info)
for(i in 1:nrow(main_info))
{
dayinfo = main_info[i,]
day = as.character(dayinfo$date)
day_contract = as.character(dayinfo$contract)
contract_data = get(day_contract)
contract_data = contract_data[day]
if(!exists('main_price'))
{
main_price = contract_data
}
else
{
main_price = rbind(main_price,contract_data)
}
}
main_price = as.data.frame(main_price)
main_price$datetime = rownames(main_price)
writeToMysqltable(main_price,db,tbname,overwrite = T)
writeToMysqltable(main_info,infodb,tbnameinfo,overwrite = T)
rm('main_price')
}
rm(list=ls(all=T))
source('src/config/include.R',encoding='utf-8')
dbinfo = 'china_future_info'
db = 'china_future_ods_day'
#tbname = 'dlcmi'
tbname = 'dlami'
#tbnameinfo = 'dlc'
tbnameinfo = 'dla'
#tbs = c('dlc01','dlc03','dlc05','dlc07','dlc09','dlc11')
tbs = c('dlax01','dlax03','dlax05','dlax07','dlax09','dlax11',
'dlay01','dlay03','dlay05','dlay07','dlay09','dlay11')
create_main_contract = function(tbs,infodb,db,tbnameinfo,tbname)
{
#获取单个合约信息
for(tb in tbs)
{
data = getTableData(db,tb)
data = xts(data[,c('Open','High','Low','Close','Vol','Oi')],order.by=as.Date(data$datetime))
assign(tb,data)
}
#获取所有的日期
alldays = sapply(tbs,function(x){m=get(x);return(index(m))})
alldays = as.character(unique(alldays[[1]]))
contracts_info = c()
#main_price = xts()
#拼接主力合约每天所用的具体合约
for(day in alldays)
{
#获取每天每个合约的持仓量
dayinfo = lapply(tbs,function(x,day){m=get(x)
info = m[day]
oi = ifelse(nrow(info)==0,0,info$Oi)
return(c(x,oi))},day)
#按持仓量进行排序
dayinfo = dayinfo[order(sapply(dayinfo,function(x){as.numeric(x[2])}),decreasing = T)]
day_contract = dayinfo[[1]][1]
contract_data = get(day_contract)
contract_data = contract_data[day]
contracts_info = c(contracts_info,day_contract)
}
contracts_info = lag(contracts_info)
contracts_info[1] = contracts_info[2]
main_info =data.frame(date = alldays,contract = contracts_info)
for(i in 1:nrow(main_info))
{
dayinfo = main_info[i,]
day = as.character(dayinfo$date)
day_contract = as.character(dayinfo$contract)
contract_data = get(day_contract)
contract_data = contract_data[day]
if(!exists('main_price'))
{
main_price = contract_data
}
else
{
main_price = rbind(main_price,contract_data)
}
}
main_price = as.data.frame(main_price)
main_price$datetime = rownames(main_price)
writeToMysqltable(main_price,db,tbname,overwrite = T)
writeToMysqltable(main_info,infodb,tbnameinfo,overwrite = T)
rm('main_price')
}
create_main_contract(tbs,dbinfo,db,tbnameinfo,tbname)
install.packages('RMySQL')
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
optunity.maximize
19321*0.06
7000 * 0.06
1159.26 - 420
source('src/config/include.R',encoding='utf-8')
source('src/config/include.R',encoding='utf-8')
source('src/config/db_config.R',encoding='utf-8')
source('src/config/include.R',encoding='utf-8')
dbinfo = 'china_future_info'
db = 'china_future_ods_day'
#tbname = 'dlcmi'
tbname = 'dlami'
#tbnameinfo = 'dlc'
tbnameinfo = 'dla'
#tbs = c('dlc01','dlc03','dlc05','dlc07','dlc09','dlc11')
tbs = c('dlax01','dlax03','dlax05','dlax07','dlax09','dlax11',
'dlay01','dlay03','dlay05','dlay07','dlay09','dlay11')
scale
unscale
?scale
scale(c(1,2,3,4,5))
x = scale
x = scale(c(1,2,3,4,5))
x
attr(x)
x[1]
?kmeans
?scale
rm(list = ls(all=T))
require(RMySQL)
host = '127.0.0.1'
username="root"
password = '123456'
port = 3306
dbname = 'football'
conn = dbConnect(MySQL(), dbname = dbname, username=username, password=password,host=host,port=port)
dbSendQuery(conn,'SET NAMES gbk')
games = dbReadTable(conn,'games')
games
eur =  dbReadTable(conn,'eur_lottery')
asia = dbReadTable(conn,'asia_lottery')
head(eur)
?merge
head(games)
bigtable = merge(games,eur,by = 'id')
head(eur)
bigtable = merge(games,eur,by.x = 'id',by.y = '序号')
head(bigtable)
bigtable = merge(bigtable,asia,by.x='id',by.y='序号')
bigtable = merge(games,eur,by.x = 'id',by.y = '序号')
rm(list=ls(all=T))
require('RMySQL')
host = '127.0.0.1'
username="root"
password = '123456'
port = 3306
dbname = 'football'
conn = dbConnect(MySQL(), dbname = dbname, username=username, password=password,host=host,port=port)
dbSendQuery(conn,'SET NAMES gbk')
games = dbReadTable(conn,'games')
eur =  dbReadTable(conn,'eur_lottery')
asia = dbReadTable(conn,'asia_lottery')
bigtable = merge(games,eur,by.x = 'id',by.y = '序号')
head(bigtable)
head(games)
head(subset(games,主队=='朴茨茅斯'))
head(subset(games,主队=='朴茨茅斯' || 客队 == '朴茨茅斯'))
head(subset(games,主队=='朴茨茅斯' | 客队 == '朴茨茅斯'))
head(subset(games,主队=='朴茨茅斯' | 客队 == '朴茨茅斯'),10)
head(games)
aggregate(games$比分,by = games$比分,length)
games$比分
?aggregate
aggregate(games$比分,by = list(games$比分),length)
x = aggregate(games$比分,by = list(games$比分),length)
total=sum(x$x)
total
x$ratio = x$x / total
x
head(x)
colnames(x) = c('fen','num','ratio')
head(x)
score = as.character(x$fen)
score = strsplit(score,':')
score
pre_score = sapply(score,function(x) as.numeric(x[1]))
aft_score = sapply(score,function(x) as.numeric(x[2]))
x$fst = pre_score
x$sec = pre_score
x
head(x)
x$sec = aft_score
head(x)
x$total_fen = x$fst + x$sec
head(x)
head(x,10)
aggregate(x$num,by = list(x$total_fen),sum)
xx = aggregate(x$num,by = list(x$total_fen),sum)
sum(xx$Group.1)
sum(xx$x)
head(xx)
xx$ratio = xx$x / 5040
head(xx)
xx$cum = cumsum(xx$ratio)
xx
x
xx
subgames = games
subgames = games
x = aggregate(subgames$比分,by = list(subgames$比分),length)
head(games)
subgames = subset(games,season = '2003-2004')
x = aggregate(subgames$比分,by = list(subgames$比分),length)
total=sum(x$x)
x$ratio = x$x / total
colnames(x) = c('fen','num','ratio')
score = as.character(x$fen)
score = strsplit(score,':')
pre_score = sapply(score,function(x) as.numeric(x[1]))
aft_score = sapply(score,function(x) as.numeric(x[2]))
x$fst = pre_score
x$sec = aft_score
x$total_fen = x$fst + x$sec
xx = aggregate(x$num,by = list(x$total_fen),sum)
xx$ratio = xx$x / 5040
xx$cum = cumsum(xx$ratio)
xx
head(xx)
subgames
head(subgames)
nrow(subgames)
subgames = subset(games,season == '2003-2004')
subgames = subset(games,season == '2003-2004')
x = aggregate(subgames$比分,by = list(subgames$比分),length)
total=sum(x$x)
x$ratio = x$x / total
colnames(x) = c('fen','num','ratio')
score = as.character(x$fen)
score = strsplit(score,':')
pre_score = sapply(score,function(x) as.numeric(x[1]))
aft_score = sapply(score,function(x) as.numeric(x[2]))
x$fst = pre_score
x$sec = aft_score
x$total_fen = x$fst + x$sec
xx = aggregate(x$num,by = list(x$total_fen),sum)
xx$ratio = xx$x / nrow(subgames)
xx$cum = cumsum(xx$ratio)
xx
x
xx
subgames = subset(games,season == '2013-2014')
x = aggregate(subgames$比分,by = list(subgames$比分),length)
total=sum(x$x)
x$ratio = x$x / total
colnames(x) = c('fen','num','ratio')
score = as.character(x$fen)
score = strsplit(score,':')
pre_score = sapply(score,function(x) as.numeric(x[1]))
aft_score = sapply(score,function(x) as.numeric(x[2]))
x$fst = pre_score
x$sec = aft_score
x$total_fen = x$fst + x$sec
xx = aggregate(x$num,by = list(x$total_fen),sum)
xx$ratio = xx$x / nrow(subgames)
xx$cum = cumsum(xx$ratio)
xx
