flag = T
}
}
result = list(flag = flag,r = newr)
return(result)
}
defaultstopwin = function(r,d,state=NULL)
{
stopwin = r$stopwin
type = r$type
high = as.numeric(d$High)
low = as.numeric(d$Low)
time = as.character(index(d))
newr = r
flag = F
if(type == 'long')
{
if(high >= stopwin)
{
newr$closetime = time
newr$close = stopwin
newr$exittype = 'longwin'
flag = T
}
}
else if(type == 'short')
{
if(low <= stopwin)
{
newr$closetime = time
newr$close = stopwin
newr$exittype = 'shortwin'
flag = T
}
}
result = list(flag = flag,r = newr)
return(result)
}
moveStopByPrePeak = function(r,d,state)
{
pred = state[['pred']]
type = r$type
prehigh = max(as.numeric(pred$High))
prelow =  min(as.numeric(pred$Low))
line = trunc((prehigh+prelow)/2)
if(type == 'long')
{
r$stoploss = prelow-1
}
else if(type == 'short')
{
r$stoploss = prehigh + 1
}
return(r)
}
NbarState = R6Class('nbarstate',
public=list(
judge = Judge$new(),
upcount = 0,
downcount = 0,
update = function(d){
if(self$judge$is_up(d))
{
self$upcount = self$upcount+1
self$downcount = 0
}
else if(self$judge$is_down(d))
{
self$upcount = 0
self$downcount = self$downcount+1
}
else if(self$judge$is_cross(d))
{
self$upcount = 0
self$downcount = 0
}
}
))
nbar_strategy = function(d,position,nbarstate,losspoint=10,winpoint=10,n=3,pred)
{
time = as.character(index(d))
open = as.numeric(d$Open)
sma = as.numeric(d$sma)
curpostion = position
high = as.numeric(d$High)
low = as.numeric(d$Low)
prehigh = max(as.numeric(pred$High))+1
prelow = min(as.numeric(pred$Low))-1
line = trunc((prehigh+prelow)/2)
if(nbarstate$upcount == n && high > prehigh)
{
#openbuy()
op = ifelse(open > prehigh,open,prehigh)
stoploss = line - 1 #op - losspoint##prelow# op - losspoint
stopwin = op + winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
if(nbarstate$downcount == n && low < prelow )
{
#opensell()
op = ifelse(open < prelow,open,prelow)
stoploss = ine+1#op + losspoint#line+1#prehigh#op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
return(curpostion)
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
records = position$records
#records = position$getRecords()
basic_analysis(records)
NbarState = R6Class('nbarstate',
public=list(
judge = Judge$new(),
upcount = 0,
downcount = 0,
update = function(d){
if(self$judge$is_up(d))
{
self$upcount = self$upcount+1
self$downcount = 0
}
else if(self$judge$is_down(d))
{
self$upcount = 0
self$downcount = self$downcount+1
}
else if(self$judge$is_cross(d))
{
self$upcount = 0
self$downcount = 0
}
}
))
nbar_strategy = function(d,position,nbarstate,losspoint=10,winpoint=10,n=3,pred)
{
time = as.character(index(d))
open = as.numeric(d$Open)
sma = as.numeric(d$sma)
curpostion = position
high = as.numeric(d$High)
low = as.numeric(d$Low)
prehigh = max(as.numeric(pred$High))+1
prelow = min(as.numeric(pred$Low))-1
line = trunc((prehigh+prelow)/2)
if(nbarstate$upcount == n && high > prehigh)
{
#openbuy()
op = ifelse(open > prehigh,open,prehigh)
stoploss = line - 1 #op - losspoint##prelow# op - losspoint
stopwin = op + winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
if(nbarstate$downcount == n && low < prelow )
{
#opensell()
op = ifelse(open < prelow,open,prelow)
stoploss = line+1#op + losspoint#line+1#prehigh#op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
return(curpostion)
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
records = position$records
#records = position$getRecords()
basic_analysis(records)
vis_bar(data['2014'])
records = position$getRecords()
records['2014']
head(records['2014'],10)
tail(records['2014'],10)
tail(records['2014'],10)
(4391+4370)/2
4333-4312
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
records = position$records
#records = position$getRecords()
basic_analysis(records)
records = position$getRecords()
records = position$getRecords()
records['2014']
records = position$records
basic_analysis(records)
records = position$getRecords()
NbarState = R6Class('nbarstate',
public=list(
judge = Judge$new(),
upcount = 0,
downcount = 0,
update = function(d){
if(self$judge$is_up(d))
{
self$upcount = self$upcount+1
self$downcount = 0
}
else if(self$judge$is_down(d))
{
self$upcount = 0
self$downcount = self$downcount+1
}
else if(self$judge$is_cross(d))
{
self$upcount = 0
self$downcount = 0
}
}
))
nbar_strategy = function(d,position,nbarstate,losspoint=10,winpoint=10,n=3,pred)
{
time = as.character(index(d))
open = as.numeric(d$Open)
sma = as.numeric(d$sma)
curpostion = position
high = as.numeric(d$High)
low = as.numeric(d$Low)
prehigh = max(as.numeric(pred$High))+1
prelow = min(as.numeric(pred$Low))-1
line = trunc((prehigh+prelow)/2)
line = 15
if(nbarstate$upcount == n && high > prehigh)
{
#openbuy()
op = ifelse(open > prehigh,open,prehigh)
op = op + 1
stoploss = line - 1 #op - losspoint##prelow# op - losspoint
stopwin = op + winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
if(nbarstate$downcount == n && low < prelow )
{
#opensell()
op = ifelse(open < prelow,open,prelow)
op = op - 1
stoploss = line+1#op + losspoint#line+1#prehigh#op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
return(curpostion)
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
records = position$records
#records = position$getRecords()
basic_analysis(records)
3828 - 3816
NbarState = R6Class('nbarstate',
public=list(
judge = Judge$new(),
upcount = 0,
downcount = 0,
update = function(d){
if(self$judge$is_up(d))
{
self$upcount = self$upcount+1
self$downcount = 0
}
else if(self$judge$is_down(d))
{
self$upcount = 0
self$downcount = self$downcount+1
}
else if(self$judge$is_cross(d))
{
self$upcount = 0
self$downcount = 0
}
}
))
nbar_strategy = function(d,position,nbarstate,losspoint=10,winpoint=10,n=3,pred)
{
time = as.character(index(d))
open = as.numeric(d$Open)
sma = as.numeric(d$sma)
curpostion = position
high = as.numeric(d$High)
low = as.numeric(d$Low)
prehigh = max(as.numeric(pred$High))+1
prelow = min(as.numeric(pred$Low))-1
line = trunc((prehigh+prelow)/2)
line = 15
if(nbarstate$upcount == n && high > prehigh)
{
#openbuy()
op = ifelse(open > prehigh,open,prehigh)
op = op + 1
stoploss = op - losspoint  #op - losspoint##prelow# op - losspoint
stopwin = op + winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
if(nbarstate$downcount == n && low < prelow )
{
#opensell()
op = ifelse(open < prelow,open,prelow)
op = op - 1
stoploss = op + losspoint#op + losspoint#line+1#prehigh#op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss,movestop=NULL)
curpostion$add(trade)
}
return(curpostion)
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
records = position$records
#records = position$getRecords()
basic_analysis(records)
3836-3828
records['2015']
records = position$getRecords()
records['2015']
vis_bar(data['2015-12-01'])
vis_bar(data['2015'])
subset(records,exittype == 'longloss')
loss = subset(records,exittype == 'longloss')
loss['2012']
loss['2015']
records = position$getRecords()
basic_analysis(position$records)
vis_bar(data['2009'])
vis_bar(data['2009'])
data['2009']
vis_bar(data['2009'])
source('src/config/include.R',encoding='utf-8')
sourceDir('src/dw/interface',encoding='utf-8')
source('src/dw/collectdata/collectfromwind.R',encoding='utf-8')
sourceDir('src/algorithm',encoding='utf-8')
source('src/strategy/shock/nbarclass.R',encoding='utf-8')
nbarframework = function()
{
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
#data$atr = ATR(data,10)$atr
#data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
#records = position$records
records = position$getRecords()
basic_analysis(position$records)
}
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
#data$atr = ATR(data,10)$atr
#data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 15
losspoint = 15
n = 3
pren = 1
pred = data[1:pren,]
prepeakn = 3
predpeak = data[1:prepeakn,]
for(i in (prepeakn+1):nrow(data))
{
#print(i)
state = list(nbstate =nbarstate,pred = predpeak )
d = data[i,]
#atr = floor(as.numeric(d$atr))
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,predpeak)
position$update(d,state,iswinfirst=F)
nbarstate$update(d)
pred = data[(i-pren+1):i,]
predpeak = data[(i-prepeakn+1):i,]
}
#records = position$records
records = position$getRecords()
basic_analysis(position$records)
vis_bar(data['2009'])
records['2009']
