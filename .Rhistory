r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss)
curpostion$add(trade)
}
if( low < prelow)
{
op = ifelse(open < prelow,open,prelow)
stoploss = op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss)
curpostion$add(trade)
}
}
# print(curpostion)
return(curpostion)
}
openshockframework = function()
{
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
n = 3
position = Position$new()
winpoint = 5
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
}
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
n = 3
position = Position$new()
winpoint = 5
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
nrow(records)
data = orgin_data
n = 3
position = Position$new()
winpoint = 10
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
Trade = R6Class('Trade',
public = list(
record = NULL,
stopwin = NULL,
stoploss = NULL,
movestop = NULL,
normalexit = NULL,
initialize = function(r,stopwin=NULL,stoploss=NULL,movestop=NULL,normalexit=NULL)
{
self$record = r
self$stoploss = stoploss
self$stopwin = stopwin
self$movestop = movestop
self$normalexit = normalexit
},
update = function(d,state,...)
{
r = self$record
flag = F
if(!is.null(self$stoploss)   )
{
result = self$stoploss(r,d,state)
self$record = result[['r']]
flag = result[['flag']]
}
if(!is.null(self$stopwin) && flag == F )
{
result = self$stopwin(r,d,state)
self$record = result[['r']]
flag = result[['flag']]
}
if(!is.null(self$normalexit) && flag == F)
{
result = self$normalexit(r,d,state)
self$record = result[['r']]
flag = result[['flag']]
}
if(!is.null(self$movestop) && flag == F)
{
self$movestop(r,d,state)
}
return(flag)
}
)
)
source('src/config/include.R',encoding='utf-8')
nbarstate = NbarState$new()
position = Position$new()
winpoint = 10
losspoint = 10
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
rm(list=ls(all=T))
source('src/config/include.R',encoding='utf-8')
sourceDir('src/dw/interface')
source('src/dw/collectdata/collectfromwind.R')
sourceDir('src/algorithm')
plot_sma = function(data,start='',end='')
{
perd = paste(start,end,sep='/')
plot_data = data[perd]
chartSeries(plot_data)
addTA(plot_data$sma,on=1)
}
judege_time = function(datetime,expectedtime)
{
time = substring(as.character(datetime),12,19)
if(time == expectedtime)
return(T)
else
return(F)
}
find_top = function(ds)
{
return(max(as.numeric(ds$High)))
}
find_bottom = function(ds)
{
return(min(as.numeric(ds$Low)))
}
openstratyge = function(d,position,pred,losspoint=10,winpoint=10,n=0)
{
time = as.character(index(d))
opentime = as.character(index(d))
expectedtime = '09:00:00'
open = as.numeric(d$Open)
curpostion = position
# print(curpostion)
prehigh = find_top(pred) + n
prelow = find_bottom(pred) - n
high = as.numeric(d$High)
low = as.numeric(d$Low)
if(judege_time(opentime,expectedtime))
{
if(high > prehigh)
{
op = ifelse(open > prehigh,open,prehigh)
stoploss = op - losspoint
stopwin = op + winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='long',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss)
curpostion$add(trade)
}
if( low < prelow)
{
op = ifelse(open < prelow,open,prelow)
stoploss = op + losspoint
stopwin = op - winpoint
r = data.frame(opentime=time,closetime=NA,open=op,close=NA,stopwin=stopwin,stoploss=stoploss,type='short',exittype='')
trade = Trade$new(r,stopwin=defaultstopwin,stoploss=defaultstoploss)
curpostion$add(trade)
}
}
# print(curpostion)
return(curpostion)
}
openshockframework = function()
{
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
n = 3
position = Position$new()
winpoint = 10
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
}
dbname ='china_future_ods_m'
tbname = 'dlami'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
n = 3
position = Position$new()
winpoint = 10
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
data = orgin_data
n = 3
position = Position$new()
winpoint = 5
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
position = Position$new()
winpoint = 15
losspoint = 15
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
orgin_data = getdata(dbname,tbname,freq)
rm(liist=ls(all=T))
rm(list=ls(all=T))
source('src/config/include.R',encoding='utf-8')
sourceDir('src/dw/interface',encoding='utf-8')
source('src/dw/collectdata/collectfromwind.R',encoding='utf-8')
sourceDir('src/algorithm',encoding='utf-8')
source('src/strategy/shock/nbarclass.R',encoding='utf-8')
nbarframework = function()
{
dbname ='china_future_ods_m'
tbname = 'dlcmi'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
}
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
data
data = orgin_data
dbname ='china_future_ods_m'
tbname = 'dlcmi'
freq = 15
orgin_data = getdata(dbname,tbname,freq)
data = orgin_data
#data$sma = lag(SMA(data$Close,20),1)
#data = na.omit(data)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 20
losspoint = 15
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 25
losspoint = 20
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 25
losspoint = 25
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
Trade = R6Class('Trade',
public = list(
record = NULL,
stopwin = NULL,
stoploss = NULL,
movestop = NULL,
normalexit = NULL,
initialize = function(r,stopwin=NULL,stoploss=NULL,movestop=NULL,normalexit=NULL)
{
self$record = r
self$stoploss = stoploss
self$stopwin = stopwin
self$movestop = movestop
self$normalexit = normalexit
},
update = function(d,state,...)
{
r = self$record
flag = F
if(!is.null(self$stopwin)  )
{
result = self$stopwin(r,d,state)
self$record = result[['r']]
flag = result[['flag']]
}
if(!is.null(self$stoploss) && flag == F  )
{
result = self$stoploss(r,d,state)
self$record = result[['r']]
flag = result[['flag']]
}
if(!is.null(self$normalexit) && flag == F)
{
result = self$normalexit(r,d,state)
self$record = result[['r']]
flag = result[['flag']]
}
if(!is.null(self$movestop) && flag == F)
{
self$movestop(r,d,state)
}
return(flag)
}
)
)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 25
losspoint = 25
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 25
losspoint = 20
n = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 10
losspoint = 10
n = 3
pren = 3
pred = data[1,]
for(i in 2:nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = d
}
records = position$records
basic_analysis(records)
nbarstate = NbarState$new()
position = Position$new()
winpoint = 5
losspoint = 5
n = 3
pren = 1
pred = data[1:pren,]
for(i in (pren+1):nrow(data))
{
#print(i)
d = data[i,]
position = nbar_strategy(d,position,nbarstate,losspoint=losspoint,winpoint=winpoint,n=n,pred)
position$update(d,nbarstate)
nbarstate$update(d)
pred = data[(i-pren):i,]
}
records = position$records
basic_analysis(records)
data = orgin_data
n = 3
position = Position$new()
winpoint = 5
losspoint = 5
pred = data[(1:n),]
for(i in (n+1):nrow(data))
{
d = data[i,]
position = openstratyge(d,position,pred,losspoint=losspoint,winpoint=winpoint)
position$update(d)
pred = data[(i-n):i,]
}
records = position$records
basic_analysis(records)
