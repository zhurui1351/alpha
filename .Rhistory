fit = kmeans(xx_scaled,n,iter.max = 100)
centers = fit$centers
labels = fit$cluster
centers_unscaled = unscale(centers,xx_scaled)
centers = centers_unscaled
k
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
return(min_index)
cen = as.numeric(centers[min_index,])
plot(v,col = 'blue',xlim=c(1,16),xaxt='n')
points(cen,col='red')
abline(h = 0,col='yellow')
axis(1, 1:length(centers[1,]),names(centers[1,]))
min_index
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,9)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio)
dt = rbind(dt,r)
}
dt
i = 7
cluster_n = i
index = which(prlabels == cluster_n)
index
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
table(prlabels)
i = 10
cluster_n = i
index = which(prlabels == cluster_n)
index
xx_dcast[2711,]
data
data['2015-11-19']
dt
index
xx_dcast[2737,]
data['2015-12-25']
d
t
dt
nrow(data)
length(data$date)
head(data)
i = 10
plot(centers[1,],type='l',ylim = range(max(centers),min(centers)),xlab='',xaxt = 'n',col=i) #ylim = range(-6,6)
axis(1, 1:length(centers[1,]),names(centers[1,]))
abline(h = 0,col='yellow')
n = 5
fit = kmeans(xx_scaled,n,iter.max = 100)
centers = fit$centers
labels = fit$cluster
centers_unscaled = unscale(centers,xx_scaled)
centers = centers_unscaled
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,9)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
k = 12
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
return(min_index)
cen = as.numeric(centers[min_index,])
plot(v,col = 'blue',xlim=c(1,16),xaxt='n')
points(cen,col='red')
abline(h = 0,col='yellow')
axis(1, 1:length(centers[1,]),names(centers[1,]))
min_index
y
dt
plot(centers[10,],type='l',ylim = range(max(centers),min(centers)),xlab='',xaxt = 'n',col=i) #ylim = range(-6,6)
axis(1, 1:length(centers[1,]),names(centers[1,]))
abline(h = 0,col='yellow')
tmp = scan()
plot(centers[10,],type='l',ylim = range(max(centers),min(centers)),xlab='',xaxt = 'n',col=i) #ylim = range(-6,6)
plot(centers[5,],type='l',ylim = range(max(centers),min(centers)),xlab='',xaxt = 'n',col=i) #ylim = range(-6,6)
axis(1, 1:length(centers[1,]),names(centers[1,]))
abline(h = 0,col='yellow')
tmp = scan()
w.stop()
source('src/config/include.R',encoding='utf-8')
dbname = 'china_future_ods_m'
tbname = 'dlcmi'
data = getTableData(dbname,tbname)
data = xts(data[,c('Open','High','Low','Close','Vol','Oi')],order.by=as.POSIXct(data$datetime,format='%Y-%m-%d %H:%M:%S'))
data = to_minutes(data,15)
time = as.character(index(data))
time = substr(time,12,19)
times = get_min_series()
backdata = data
data_open = data[time %in% c('09:00:00'),]
data_open_votile = (data_open$Close - data_open$Open)
votile = as.data.frame(diff(data$Close))
#votile = as.data.frame(data$Close - data$Open)
votile[time %in% c('09:00:00'),] = data_open_votile
colnames(votile) = 'change'
votile$time = time
votile$day = as.character(as.Date(rownames(votile)))
votile = subset(votile,time %in% times)
xx_dcast = dcast(votile,day ~ time,value.var='change')
xx = xx_dcast[,2:ncol(xx_dcast)]
xx_scaled = scale(xx)
n = 5
fit = kmeans(xx_scaled,n,iter.max = 100)
centers = fit$centers
labels = fit$cluster
centers_unscaled = unscale(centers,xx_scaled)
centers = centers_unscaled
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
compute_distance = function(v,centers,k)
{
#k = 9
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
return(min_index)
cen = as.numeric(centers[min_index,])
plot(v,col = 'blue',xlim=c(1,16),xaxt='n')
points(cen,col='red')
abline(h = 0,col='yellow')
axis(1, 1:length(centers[1,]),names(centers[1,]))
}
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
require(WindR)
require(quantmod)
w.start()
Sys.time
Sys.time()
Sys.date()
Sys.Date()
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00'，sep=' ')
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00'，sep=' ')
opentime = paste(date,'09:00:00',sep=' ')
opentime
closetime = paste(date,'15:15:00',sep=' ')
closetime
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00',sep=' ')
closetime = paste(date,'15:15:00',sep=' ')
w_wsi_data<-w.wsi("C1705.DCE","open,high,low,close,volume,amt",opentime,closetime,"BarSize=15")
data = w_wsi_data[[2]]
pricedata = xts(data[,2:7],order.by = as.POSIXct(data$DATETIME))
startdata = pricedata[1,]
pricedata = pricedata[2:nrow(pricedata),]
index(pricedata) = index(pricedata) - minutes(15)
y = diff(pricedata$close)
y[1] = (pricedata[1,]$close - pricedata[1,]$open)
v = as.numeric(y)
v
y
y
pricedata
length(v)
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,10)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,9)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
k  = 9
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
min_index
12-3
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,10)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,11)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00',sep=' ')
closetime = paste(date,'15:15:00',sep=' ')
w_wsi_data<-w.wsi("C1705.DCE","open,high,low,close,volume,amt",opentime,closetime,"BarSize=15")
#查询主力合约
#w_wss_data<-w.wss('C.DCE','trade_code')
data = w_wsi_data[[2]]
pricedata = xts(data[,2:7],order.by = as.POSIXct(data$DATETIME))
startdata = pricedata[1,]
pricedata = pricedata[2:nrow(pricedata),]
index(pricedata) = index(pricedata) - minutes(15)
y = diff(pricedata$close)
#y = pricedata$close - pricedata$open
y[1] = (pricedata[1,]$close - pricedata[1,]$open)
v = as.numeric(y)
v
length(v)
k = 10
pricedata
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00',sep=' ')
closetime = paste(date,'15:15:00',sep=' ')
w_wsi_data<-w.wsi("C1705.DCE","open,high,low,close,volume,amt",opentime,closetime,"BarSize=15")
#查询主力合约
#w_wss_data<-w.wss('C.DCE','trade_code')
data = w_wsi_data[[2]]
pricedata = xts(data[,2:7],order.by = as.POSIXct(data$DATETIME))
startdata = pricedata[1,]
pricedata = pricedata[2:nrow(pricedata),]
index(pricedata) = index(pricedata) - minutes(15)
y = diff(pricedata$close)
#y = pricedata$close - pricedata$open
y[1] = (pricedata[1,]$close - pricedata[1,]$open)
v = as.numeric(y)
pricedata
v
k = 11
length(v)
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
min_index
dt
n = 10
fit = kmeans(xx_scaled,n,iter.max = 100)
centers = fit$centers
labels = fit$cluster
centers_unscaled = unscale(centers,xx_scaled)
centers = centers_unscaled
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
min_index
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00',sep=' ')
closetime = paste(date,'15:15:00',sep=' ')
w_wsi_data<-w.wsi("C1705.DCE","open,high,low,close,volume,amt",opentime,closetime,"BarSize=15")
#查询主力合约
#w_wss_data<-w.wss('C.DCE','trade_code')
data = w_wsi_data[[2]]
pricedata = xts(data[,2:7],order.by = as.POSIXct(data$DATETIME))
startdata = pricedata[1,]
pricedata = pricedata[2:nrow(pricedata),]
index(pricedata) = index(pricedata) - minutes(15)
y = diff(pricedata$close)
#y = pricedata$close - pricedata$open
y[1] = (pricedata[1,]$close - pricedata[1,]$open)
v = as.numeric(y)
v
k = 12
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
min_index
prlabels = apply(xx,MARGIN = 1,compute_distance,centers,12)
table(labels)
table(prlabels)
sum(labels == prlabels) / length(labels)
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
date = as.character(Sys.Date())
opentime = paste(date,'09:00:00',sep=' ')
closetime = paste(date,'15:15:00',sep=' ')
w_wsi_data<-w.wsi("C1705.DCE","open,high,low,close,volume,amt",opentime,closetime,"BarSize=15")
#查询主力合约
#w_wss_data<-w.wss('C.DCE','trade_code')
data = w_wsi_data[[2]]
pricedata = xts(data[,2:7],order.by = as.POSIXct(data$DATETIME))
startdata = pricedata[1,]
pricedata = pricedata[2:nrow(pricedata),]
index(pricedata) = index(pricedata) - minutes(15)
y = diff(pricedata$close)
#y = pricedata$close - pricedata$open
y[1] = (pricedata[1,]$close - pricedata[1,]$open)
v = as.numeric(y)
v
k = 12
vv = v[1:k]
sample_centers = apply(centers,MARGIN = 1 ,function(x,k){return(x[1:k])},k)
sample_centers = t(sample_centers)
distance = apply(sample_centers,MARGIN = 1 ,function(x,v){dist(rbind(x,v))},vv)
min_index = which.min(distance)
min_index
dt = data.frame()
for( i in 1:n)
{
cluster_n = i
index = which(prlabels == cluster_n)
label_data = xx[index,]
point = label_data[,10:15]
point = apply(point,1,sum)
total = sum(point)
ratio = sum(point>0)/length(point)
r = data.frame(n=i,sum = total,ratio = ratio,count = length(index))
dt = rbind(dt,r)
}
dt
w.stop()
